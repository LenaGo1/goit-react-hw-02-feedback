{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","className","onClick","Statistics","good","neutral","bad","total","positivePercentage","prototype","PropTypes","number","isRequired","Section","title","children","Notification","message","App","state","countFeedback","e","selectedOption","currentTarget","textContent","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","arrayFromState","keys","totalValues","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUA0BeA,EAtBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,8BACKD,EAAQE,KAAI,SAAAC,GACT,OACI,wBACIC,KAAK,SACLC,UAAY,SACZC,QAASL,EAHb,SAIKE,GAJQA,S,gBCJvBI,G,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,gCACI,4CAEI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YAKZL,EAAWM,UAAY,CACnBL,KAAMM,IAAUC,OAAOC,WACvBP,QAAQK,IAAUC,OAAOC,WACzBN,IAAII,IAAUC,OAAOC,WACrBL,MAAMG,IAAUC,OAAOC,WACvBJ,mBAAmBE,IAAUC,OAAOC,YAGzBT,QCRAU,G,MAbC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,sBAAKd,UAAU,UAAf,UACI,6BAAKa,IACJC,OCIMC,EARM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACb,4BAAIA,KCoDGC,E,4MAhDXC,MAAQ,CACJf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTc,cAAgB,SAACC,GACb,IAAMC,EAAiBD,EAAEE,cAAcC,YACvC,EAAKC,UAAS,SAAAC,GAAS,sBACvBJ,EAAiBI,EAAUJ,GAAkB,O,EAIjDK,mBAAqB,WAEjB,OADcC,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAO,I,EAI/EC,gCAAkC,WAC9B,IAAM1B,EAAQ,EAAKoB,qBACnB,OAAmB,IAAVpB,EAAgB2B,KAAKC,MAAO,EAAKhB,MAAMf,KAAOG,EAAS,KAAO,G,4CAI3E,WAEI,MAA+B6B,KAAKjB,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAiBT,OAAOU,KAAKF,KAAKjB,OAClCoB,EAAcH,KAAKT,qBAEzB,OAEI,eAAC,EAAD,CAASb,MAAM,wBAAf,UACI,cAAC,EAAD,CAAiBlB,QAASyC,EACtBxC,gBAAiBuC,KAAKhB,gBACT,IAAhBmB,EACK,cAAC,EAAD,CAActB,QAAQ,sBACtB,cAAC,EAAD,CAAYb,KAAMA,EAChBC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKT,qBACZnB,mBAAoB4B,KAAKH,2C,GA1C/BO,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6425a760.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FeedbackOptions.css';\n\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\n    <div>\n        {options.map(option => {\n            return (\n                <button key={option}\n                    type=\"button\"\n                    className = \"Button\"\n                    onClick={onLeaveFeedback}>\n                    {option}\n                </button>\n            )\n        })\n    }       \n    </div>\n)\n \nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback:PropTypes.func.isRequired\n\n}\n\nexport default FeedbackOptions;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './Statistics.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (    \n    <div>\n        <h2>Statistics</h2>\n        \n            <p>Good: {good}</p>\n            <p>Neutral: {neutral}</p>\n            <p>Bad: {bad}</p>\n            <p>Total: {total}</p>\n            <p>Positive feedback: {positivePercentage}%</p>\n        \n    </div>\n)\n\nStatistics.prototype = {\n    good: PropTypes.number.isRequired,\n    neutral:PropTypes.number.isRequired,\n    bad:PropTypes.number.isRequired,\n    total:PropTypes.number.isRequired,\n    positivePercentage:PropTypes.number.isRequired,\n}\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './Section.css'\n\nconst Section = ({title, children}) => \n    <div className=\"Section\" >\n        <h1>{title}</h1>\n        {children}\n    </div>;\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired\n}\n\n\n\nexport default Section;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({message}) => (\n        <p>{message}</p>\n)\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport default Notification;","import React, {Component} from 'react';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification'\n\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n    \n    countFeedback = (e) => {\n        const selectedOption = e.currentTarget.textContent\n        this.setState(prevState => ({\n       [selectedOption]: prevState[selectedOption] + 1\n      }))\n     }\n       \n    countTotalFeedback = () => {\n        const total = Object.values(this.state).reduce((acc, value)=> acc + value, 0)\n        return total;\n    };\n        \n    countPositiveFeedbackPercentage = () => {\n        const total = this.countTotalFeedback();\n        return  (total !== 0 ) ? Math.round((this.state.good / total) * 100) : 0\n    };  \n    \n\n    render() {\n        \n        const { good, neutral, bad } = this.state;        \n        const arrayFromState = Object.keys(this.state);\n        const totalValues = this.countTotalFeedback();\n                \n        return (\n            \n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions options={arrayFromState}\n                    onLeaveFeedback={this.countFeedback} />\n                {totalValues === 0\n                    ? <Notification message=\"No feedback given\"></Notification>\n                    : <Statistics good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={this.countTotalFeedback()}\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\n                    />}\n            </Section>\n        )\n    }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}